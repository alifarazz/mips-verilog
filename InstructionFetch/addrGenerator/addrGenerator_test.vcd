$date
	Tue Oct 23 23:26:19 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module main_test $end
$var wire 32 ! Ins_address [31:0] $end
$var wire 32 " Add_out [31:0] $end
$var reg 32 # Add_in [31:0] $end
$var reg 1 $ PCSrc $end
$var reg 32 % adr_branch [31:0] $end
$scope module uut $end
$var wire 32 & Add_in [31:0] $end
$var wire 32 ' Add_out [31:0] $end
$var wire 1 $ PCSrc $end
$var wire 32 ( adr_branch [31:0] $end
$var wire 1 ) hit $end
$var wire 32 * Ins_address [31:0] $end
$var wire 32 + Add_out_temp [31:0] $end
$scope module pcAdder $end
$var wire 32 , old [31:0] $end
$var wire 32 - newv [31:0] $end
$upscope $end
$scope module pcMux $end
$var wire 32 . a [31:0] $end
$var wire 32 / b [31:0] $end
$var wire 1 $ sel $end
$var wire 32 0 res [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
z)
bx (
bx '
bx &
bx %
x$
bx #
bx "
bx !
$end
#10000
b1010 !
b1010 *
b1010 0
0$
b1010 %
b1010 (
b1010 /
b110 "
b110 '
b110 +
b110 -
b110 .
b10 #
b10 &
b10 ,
#110000
