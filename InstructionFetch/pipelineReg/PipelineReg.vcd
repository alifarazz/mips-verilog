$date
	Tue Oct 23 23:43:21 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module main_test $end
$var wire 32 ! Instruction_out [31:0] $end
$var wire 32 " Adder_out [31:0] $end
$var reg 32 # Adder_in [31:0] $end
$var reg 32 $ Instruction_in [31:0] $end
$var reg 1 % clk $end
$var reg 1 & hit $end
$var reg 1 ' rstn $end
$var integer 32 ( i [31:0] $end
$scope module uut $end
$var wire 32 ) Adder_in [31:0] $end
$var wire 32 * Instruction_in [31:0] $end
$var wire 1 % clk $end
$var wire 1 & hit $end
$var wire 1 ' rstn $end
$var reg 32 + Adder_out [31:0] $end
$var reg 32 , Instruction_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ,
bx +
bx *
bx )
b0 (
1'
x&
0%
bx $
bx #
bx "
bx !
$end
#2000
b1 (
1%
#4000
b10 (
0%
#6000
b11 (
1%
#8000
b100 (
0%
#10000
b0 "
b0 +
b0 !
b0 ,
b101 (
1%
0'
#12000
b110 (
0%
#14000
b111 (
1%
#16000
b1000 (
0%
#18000
b1001 (
1%
#20000
b11 !
b11 ,
b10 "
b10 +
b1010 (
0%
1&
b11 $
b11 *
b10 #
b10 )
#22000
b1011 (
1%
#24000
b1100 (
0%
#26000
b1101 (
1%
#28000
b1110 (
0%
#30000
b1111 (
1%
0&
b100101100 $
b100101100 *
b11001000 #
b11001000 )
#32000
b10000 (
0%
#34000
b10001 (
1%
#36000
b10010 (
0%
#38000
b10011 (
1%
#40000
b10100 (
0%
